"use strict";

// Урок 1
// https://learn.javascript.ru/object-methods

// Задача 1
var arr = ["a", "b"];

arr.push(function () {
  console.log(this);
});

arr[2]();

/*Решение:
дооступ к методу осуществляется через [], 
в котором контекст вызова this равен arr */

// Задача 2
var obj = {
  go: function go() {
    console.log(this);
  }
};

obj.go();

/*Решение:
*/

// Задача 3

var obj, method;
obj = {
  go: function go() {
    console.log(this);
  }
};

obj.go(); // (1) object
obj.go(); // (2) object
(method = obj.go)(); // (3) undefined
(obj.go || obj.stop)(); // (4) undefined

//Задача 4

var name = "";
var user = {
  name: "Василий",
  export: undefined
};
console.log(user.export.name); //Василий
/*Решение: this без вызова функции - указывает на глобаальный объект
global.name = "" (объявленная выше переменная)
*/

//Задача 5:
var name = "";
var user = {
  name: "Test",
  export: function _export() {
    return this;
  }
};
console.log(user.export().name); //Test
/*Решение: метод инициализируется с помощью () и поэтому в
функцию передается this == user, so this.name == "Test"*/

// Задача 6: возврат объекта с this
var name = "";
var user = {
  name: "Василий",
  export: function _export() {
    return {
      value: this
    };
  }
};
console.log(user.export().value.name);
/*Решение: при вызове функции в this передается ссылка на объект
, поэтому user.export().value == user, отсюда */

//Задача 6: создать калькулятор
var calculator = {
  read: function read(a, b) {
    this.a = a;
    this.b = b;
  },
  sum: function sum() {
    return this.a + this.b;
  },
  mul: function mul() {
    return this.a * this.b;
  }
};

calculator.read(12, 45);
console.log(calculator.sum());
console.log(calculator.mul());

//Задача 7: make a ladder
var ladder = {
  step: 0,
  up: function up() {
    // вверх по лестнице
    this.step++;
    return this;
  },
  down: function down() {
    // вниз по лестнице
    this.step--;
    return this;
  },
  showStep: function showStep() {
    // вывести текущую ступеньку
    // console.log(this.step);
    return this;
  }
};

//make methods chainable
ladder.up().up().down().up().down().showStep(); // 1

//Решение: в каждом методе вернуть this
//# sourceMappingURL=data:application/json;base64,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RSxjQUFXOztBQUNiLFFBQUksQ0FBQyxJQUFJLEVBQUUsQ0FBQztBQUNaLFdBQU8sSUFBSSxDQUFDO0dBQ2I7QUFDRCxNQUFJLEVBQUUsZ0JBQVc7O0FBQ2YsUUFBSSxDQUFDLElBQUksRUFBRSxDQUFDO0FBQ1osV0FBTyxJQUFJLENBQUM7R0FDYjtBQUNELFVBQVEsRUFBRSxvQkFBVzs7O0FBRW5CLFdBQU8sSUFBSSxDQUFDO0dBQ2I7Q0FDRjs7O0FBQUMsQUFHRixNQUFNLENBQUMsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLENBQUMsSUFBSSxFQUFFLENBQUMsRUFBRSxFQUFFLENBQUMsSUFBSSxFQUFFLENBQUMsUUFBUSxFQUFFOzs7QUFBQyIsImZpbGUiOiJwYXJ0MS9vYmplY3RzLzEub2JqZWN0X21ldGhvZHMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyDQo9GA0L7QuiAxXG4vLyBodHRwczovL2xlYXJuLmphdmFzY3JpcHQucnUvb2JqZWN0LW1ldGhvZHNcblxuXG4vLyDQl9Cw0LTQsNGH0LAgMVxudmFyIGFyciA9IFtcImFcIiwgXCJiXCJdO1xuXG5hcnIucHVzaChmdW5jdGlvbigpIHtcbiAgY29uc29sZS5sb2coIHRoaXMgKTtcbn0pXG5cbmFyclsyXSgpOyBcblxuLyrQoNC10YjQtdC90LjQtTpcbtC00L7QvtGB0YLRg9C/INC6INC80LXRgtC+0LTRgyDQvtGB0YPRidC10YHRgtCy0LvRj9C10YLRgdGPINGH0LXRgNC10LcgW10sIFxu0LIg0LrQvtGC0L7RgNC+0Lwg0LrQvtC90YLQtdC60YHRgiDQstGL0LfQvtCy0LAgdGhpcyDRgNCw0LLQtdC9IGFyciAqL1xuXG5cblxuXG4vLyDQl9Cw0LTQsNGH0LAgMlxudmFyIG9iaiA9IHtcbiAgZ286IGZ1bmN0aW9uKCkge2NvbnNvbGUubG9nKHRoaXMpfVxufTtcblxuKG9iai5nbykoKVxuXG4vKtCg0LXRiNC10L3QuNC1OlxuKi9cblxuXG4vLyDQl9Cw0LTQsNGH0LAgM1xuXG52YXIgb2JqLCBtZXRob2Q7XG5vYmogPSB7XG4gIGdvOiBmdW5jdGlvbigpIHsgY29uc29sZS5sb2codGhpcyk7IH1cbn07XG5cbm9iai5nbygpOyAgICAgICAgICAgIC8vICgxKSBvYmplY3RcbihvYmouZ28pKCk7ICAgICAgICAgIC8vICgyKSBvYmplY3RcbihtZXRob2QgPSBvYmouZ28pKCk7ICAgICAgLy8gKDMpIHVuZGVmaW5lZFxuKG9iai5nbyB8fCBvYmouc3RvcCkoKTsgLy8gKDQpIHVuZGVmaW5lZFxuXG5cblxuLy/Ql9Cw0LTQsNGH0LAgNFxuXG52YXIgbmFtZSA9IFwiXCI7XG52YXIgdXNlciA9IHtcbiAgbmFtZTogXCLQktCw0YHQuNC70LjQuVwiLFxuICBleHBvcnQ6IHRoaXNcbn07XG5jb25zb2xlLmxvZyggdXNlci5leHBvcnQubmFtZSApOyAvL9CS0LDRgdC40LvQuNC5XG4vKtCg0LXRiNC10L3QuNC1OiB0aGlzINCx0LXQtyDQstGL0LfQvtCy0LAg0YTRg9C90LrRhtC40LggLSDRg9C60LDQt9GL0LLQsNC10YIg0L3QsCDQs9C70L7QsdCw0LDQu9GM0L3Ri9C5INC+0LHRitC10LrRglxuZ2xvYmFsLm5hbWUgPSBcIlwiICjQvtCx0YrRj9Cy0LvQtdC90L3QsNGPINCy0YvRiNC1INC/0LXRgNC10LzQtdC90L3QsNGPKVxuKi9cblxuXG5cbi8v0JfQsNC00LDRh9CwIDU6IFxudmFyIG5hbWUgPSBcIlwiO1xudmFyIHVzZXIgPSB7XG4gIG5hbWU6IFwiVGVzdFwiLFxuICBleHBvcnQ6IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiB0aGlzO1xuICB9XG59XG5jb25zb2xlLmxvZyggdXNlci5leHBvcnQoKS5uYW1lICkgLy9UZXN0XG4vKtCg0LXRiNC10L3QuNC1OiDQvNC10YLQvtC0INC40L3QuNGG0LjQsNC70LjQt9C40YDRg9C10YLRgdGPINGBINC/0L7QvNC+0YnRjNGOICgpINC4INC/0L7RjdGC0L7QvNGDINCyXG7RhNGD0L3QutGG0LjRjiDQv9C10YDQtdC00LDQtdGC0YHRjyB0aGlzID09IHVzZXIsIHNvIHRoaXMubmFtZSA9PSBcIlRlc3RcIiovXG5cblxuXG4vLyDQl9Cw0LTQsNGH0LAgNjog0LLQvtC30LLRgNCw0YIg0L7QsdGK0LXQutGC0LAg0YEgdGhpc1xudmFyIG5hbWUgPSBcIlwiO1xudmFyIHVzZXIgPSB7XG4gIG5hbWU6IFwi0JLQsNGB0LjQu9C40LlcIixcbiAgZXhwb3J0OiBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4ge1xuICAgICAgdmFsdWU6IHRoaXNcbiAgICB9O1xuICB9XG59O1xuY29uc29sZS5sb2coIHVzZXIuZXhwb3J0KCkudmFsdWUubmFtZSApOyBcbi8q0KDQtdGI0LXQvdC40LU6INC/0YDQuCDQstGL0LfQvtCy0LUg0YTRg9C90LrRhtC40Lgg0LIgdGhpcyDQv9C10YDQtdC00LDQtdGC0YHRjyDRgdGB0YvQu9C60LAg0L3QsCDQvtCx0YrQtdC60YJcbiwg0L/QvtGN0YLQvtC80YMgdXNlci5leHBvcnQoKS52YWx1ZSA9PSB1c2VyLCDQvtGC0YHRjtC00LAgKi9cblxuXG4vL9CX0LDQtNCw0YfQsCA2OiDRgdC+0LfQtNCw0YLRjCDQutCw0LvRjNC60YPQu9GP0YLQvtGAXG52YXIgY2FsY3VsYXRvciA9IHtcbiAgcmVhZDogZnVuY3Rpb24oYSxiKXtcbiAgICB0aGlzLmEgPSBhO1xuICAgIHRoaXMuYiA9IGI7XG4gIH0sXG4gIHN1bTogZnVuY3Rpb24oKXtcbiAgICByZXR1cm4gdGhpcy5hICsgdGhpcy5iO1xuICB9LFxuICBtdWw6IGZ1bmN0aW9uKCl7XG4gICAgcmV0dXJuIHRoaXMuYSAqIHRoaXMuYjtcbiAgfVxufTtcblxuY2FsY3VsYXRvci5yZWFkKDEyLDQ1KTtcbmNvbnNvbGUubG9nKCBjYWxjdWxhdG9yLnN1bSgpICk7XG5jb25zb2xlLmxvZyggY2FsY3VsYXRvci5tdWwoKSApO1xuXG5cblxuXG5cbi8v0JfQsNC00LDRh9CwIDc6IG1ha2UgYSBsYWRkZXJcbnZhciBsYWRkZXIgPSB7XG4gIHN0ZXA6IDAsXG4gIHVwOiBmdW5jdGlvbigpIHsgLy8g0LLQstC10YDRhSDQv9C+INC70LXRgdGC0L3QuNGG0LVcbiAgICB0aGlzLnN0ZXArKztcbiAgICByZXR1cm4gdGhpcztcbiAgfSxcbiAgZG93bjogZnVuY3Rpb24oKSB7IC8vINCy0L3QuNC3INC/0L4g0LvQtdGB0YLQvdC40YbQtVxuICAgIHRoaXMuc3RlcC0tO1xuICAgIHJldHVybiB0aGlzO1xuICB9LFxuICBzaG93U3RlcDogZnVuY3Rpb24oKSB7IC8vINCy0YvQstC10YHRgtC4INGC0LXQutGD0YnRg9GOINGB0YLRg9C/0LXQvdGM0LrRg1xuICAgIC8vIGNvbnNvbGUubG9nKHRoaXMuc3RlcCk7XG4gICAgcmV0dXJuIHRoaXM7XG4gIH1cbn07XG5cbi8vbWFrZSBtZXRob2RzIGNoYWluYWJsZVxubGFkZGVyLnVwKCkudXAoKS5kb3duKCkudXAoKS5kb3duKCkuc2hvd1N0ZXAoKTsgLy8gMVxuXG5cbi8v0KDQtdGI0LXQvdC40LU6INCyINC60LDQttC00L7QvCDQvNC10YLQvtC00LUg0LLQtdGA0L3Rg9GC0YwgdGhpcyJdLCJzb3VyY2VSb290IjoiL3NvdXJjZS8ifQ==
